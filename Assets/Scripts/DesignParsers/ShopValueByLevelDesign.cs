// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var shopValueByLevelDesign = ShopValueByLevelDesign.FromJson(jsonString);

namespace QuickType.ShopValueByLevelDesign
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ShopValueByLevelDesign
    {
        [JsonProperty("ShopValueByLevelDesign")]
        public ShopValueByLevelDesignElement[] ShopValueByLevelDesignShopValueByLevelDesign { get; set; }
    }

    public partial class ShopValueByLevelDesignElement
    {
        [JsonProperty("StartLevel")]
        public long StartLevel { get; set; }
        
        [JsonProperty("ID")]
        public string Id{ get; set; }

        [JsonProperty("BaseGold")]
        public long BaseGold { get; set; }

        [JsonProperty("BasePill")]
        public long BasePill { get; set; }

        [JsonProperty("BaseWeaponScroll")]
        public long BaseWeaponScroll { get; set; }
    }

    public partial class ShopValueByLevelDesign
    {
        public static ShopValueByLevelDesign FromJson(string json) => JsonConvert.DeserializeObject<ShopValueByLevelDesign>(json, QuickType.Converter.Settings);
    }

    public static partial class Serialize
    {
        public static string ToJson(this ShopValueByLevelDesign self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static partial class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
