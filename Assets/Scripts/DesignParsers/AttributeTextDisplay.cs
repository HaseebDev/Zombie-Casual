// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var attributeTextDisplay = AttributeTextDisplay.FromJson(jsonString);
using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace QuickType.AttributeTextDisplay
{
    public partial class AttributeTextDisplay
    {
        [JsonProperty("AttributeTextDisplay", Required = Required.Always)]
        public List<AttributeDisplay> AttributeDisplay { get; set; }
    }

    public partial class AttributeDisplay
    {
        [JsonProperty("ID", Required = Required.Always)]
        public string Id { get; set; }

        [JsonProperty("Min", Required = Required.Always)]
        public double Min { get; set; }

        [JsonProperty("Max", Required = Required.Always)]
        public long Max { get; set; }

        [JsonProperty("Description", Required = Required.Always)]
        public string Description { get; set; }
    }

    public partial class AttributeTextDisplay
    {
        public static AttributeTextDisplay FromJson(string json) =>
            JsonConvert.DeserializeObject<AttributeTextDisplay>(json, Converter.Settings);
    }

    internal static partial class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter {DateTimeStyles = DateTimeStyles.AssumeUniversal}
            },
        };
    }
}