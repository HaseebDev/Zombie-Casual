//// <auto-generated />
////
//// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
////
////    using QuickType;
////
////    var campaignRewardDesign = CampaignRewardDesign.FromJson(jsonString);

//namespace QuickType
//{
//    using System;
//    using System.Collections.Generic;

//    using System.Globalization;
//    using Newtonsoft.Json;
//    using Newtonsoft.Json.Converters;

//    public partial class CampaignRewardDesign
//    {
//        [JsonProperty("CampaignRewards", Required = Required.Always)]
//        public List<CampaignReward> CampaignRewards { get; set; }
//    }

//    public partial class CampaignReward
//    {
//        [JsonProperty("Level", Required = Required.Always)]
//        public long Level { get; set; }

//        [JsonProperty("Rewards", Required = Required.Always)]
//        public List<Reward> Rewards { get; set; }
//    }

//    public partial class Reward
//    {
//        [JsonProperty("RewardID", Required = Required.Always)]
//        public string RewardId { get; set; }

//        [JsonProperty("Value", Required = Required.Always)]
//        public long Value { get; set; }
//    }

//    public partial class CampaignRewardDesign
//    {
//        public static CampaignRewardDesign FromJson(string json) => JsonConvert.DeserializeObject<CampaignRewardDesign>(json, QuickType.Converter.Settings);
//    }

//    public static class Serialize
//    {
//        public static string ToJson(this CampaignRewardDesign self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
//    }

//    internal static class Converter
//    {
//        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
//        {
//            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
//            DateParseHandling = DateParseHandling.None,
//            Converters =
//            {
//                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
//            },
//        };
//    }
//}
